name: Web

on:
  push:
    paths:
      - "web/**"
      - "kubernetes/web.yaml"
      - ".github/workflows/web.yml"

jobs:
  typescript:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
      - uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ./web/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./web/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v4
      - run: yarn install
      - run: yarn tsc
  prettier:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
      - uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ./web/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./web/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v4
      - run: yarn install
      - run: yarn run prettier .
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
      - uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ./web/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./web/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: yarn install
      - run: yarn test
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  eslint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
      - uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ./web/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./web/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v4
      - run: yarn install
      - run: yarn run eslint .
  build:
    if: github.ref != 'refs/heads/master'
    defaults:
      run:
        working-directory: ./web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ./ebay-helper-frontend/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./web/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: yarn install
      - run: yarn run build
  docker-build-and-push:
    if: github.ref == 'refs/heads/master'
    defaults:
      run:
        working-directory: ./web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ./ebay-helper-frontend/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./web/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: yarn install
      - run: yarn run build
      - name: Dockerize
        run: docker build -t devkits-web .
      - uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Push Docker image to Digital Ocean
        run: |
          doctl registry login
          docker tag devkits-web registry.digitalocean.com/jbb/devkits-web:$(git log -1 --format=%ct)
          docker tag devkits-web registry.digitalocean.com/jbb/devkits-web
          docker push registry.digitalocean.com/jbb/devkits-web:$(git log -1 --format=%ct)
          docker push registry.digitalocean.com/jbb/devkits-web
  deploy:
    if: github.ref == 'refs/heads/master'
    needs: [prettier, eslint, typescript, test, docker-build-and-push]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - run: |
          doctl kubernetes cluster kubeconfig save 76857a2c-c3c9-4e27-a500-65e359f42b0d
          kubectl config use-context do-lon1-devkits
          kubectl apply -f ./kubernetes/web.yaml
          kubectl set image deployment/devkits-web devkits-web=registry.digitalocean.com/jbb/devkits-web:$(git log -1 --format=%ct)
          kubectl rollout restart deployment/devkits-web
